apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  labels:
    app: app
spec:
  replicas: {{ ternary 1 0 .Values.enabled }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      terminationGracePeriodSeconds: 10
      imagePullSecrets:
        - name: diploi-pull-secret
        #initContainers:
        #- name: install-dependencies
        #  image: ghcr.io/diploi/component-nextjs:main
        #  imagePullPolicy: Always
        #  command: ['npm', 'install']
        #  workingDir: /app/{{ .Values.identifier }}
        #  env:
        #  - name: NODE_ENV
        #    value: development
        #  volumeMounts:
        #    - name: app-mount
        #      mountPath: /app
      containers:
        - name: app
          image: {{ .Values.images.app }}
          imagePullPolicy: Always
          #workingDir: /app/{{ .Values.identifier }}
          #command: ['sh', '-c', 'echo The app is running! && sleep 10000']
          ports:
            - containerPort: 8069
          env:
            {{- range .Values.env }}
            - name: {{ .identifier }}
              value: {{ .value | quote }}
            {{- end }}
            {{- range .Values.parameterGroups }}
            - name: {{ .identifier }}
              value: {{ .value | quote }}
            {{- end }}
            - name: APP_PUBLIC_URL
              value: {{ .Values.hosts.app }}
            - name: STAGE
              value: {{ .Values.stage }}
            - name: HOST
              value: {{ .Values.envMap.POSTGRES_HOST.value | quote }}
            - name: PORT
              value: {{ .Values.envMap.POSTGRES_PORT.value | quote }}
            - name: USER
              value: {{ .Values.envMap.POSTGRES_USER.value | quote }}
            - name: PASSWORD
              value: {{ .Values.envMap.POSTGRES_PASSWORD.value | quote }}
          volumeMounts:
            - name: data-mount
              mountPath: /var/lib/odoo
            {{- if hasKey .Values.storage "home" }}
            - name: home-mount
              mountPath: /home/odoo
            {{- end }}
            {{- if hasKey .Values.storage "extra-addons" }}
            - name: extra-addons-mount
              mountPath: /mnt/extra-addons
            {{- end }}
      volumes:
        - name: data-mount
          hostPath:
            path: {{ .Values.storage.data.hostPath }}
        {{- if hasKey .Values.storage "home" }}
        - name: home-mount
          hostPath:
            path: {{ .Values.storage.home.hostPath }}
        {{- end }}
        {{- if hasKey .Values.storage "extra-addons" }}
        - name: extra-addons-mount
          hostPath:
            path: {{ index (index .Values.storage "extra-addons") "hostPath" }}
        {{- end }}



